"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.5.
"""

from pathlib import Path
from types import MappingProxyType
from typing import Tuple

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY: str = "django-insecure-@nh-+f%4c=uft490&pvle9jmc9#sd@5c9f8nz2^b^78qglgz2q"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG: bool = True

ALLOWED_HOSTS: Tuple[str, ...] = ('*',)

# Application definition
INSTALLED_APPS: Tuple[str, ...] = (
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "drf_spectacular",
    "drf_spectacular_sidecar",
    "corsheaders",
    "pokemon",
)

MIDDLEWARE: Tuple[str, ...] = (
    "django.middleware.security.SecurityMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
)

ROOT_URLCONF: str = "config.urls"

TEMPLATES: Tuple[MappingProxyType, ...] = (
    MappingProxyType({
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": (),
        "APP_DIRS": True,
        "OPTIONS": MappingProxyType({
            "context_processors": (
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ),
        }),
    }),
)

WSGI_APPLICATION: str = "config.wsgi.application"

# Database
DATABASES = {  # noqa: WPS407
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": str(BASE_DIR / "db.sqlite3"),
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS: Tuple[MappingProxyType, ...] = (
    MappingProxyType({
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    }),
    MappingProxyType({
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    }),
    MappingProxyType({
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    }),
    MappingProxyType({
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    }),
)

# Internationalization
LANGUAGE_CODE: str = "en-us"
TIME_ZONE: str = "UTC"
USE_I18N: bool = True
USE_TZ: bool = True

# Static files
STATIC_URL: str = "static/"

# Default primary key field type
DEFAULT_AUTO_FIELD: str = "django.db.models.BigAutoField"

# Django REST Framework settings
REST_FRAMEWORK = MappingProxyType({
    "DEFAULT_RENDERER_CLASSES": ("rest_framework.renderers.JSONRenderer",),
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 20,
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",

})

SPECTACULAR_SETTINGS =  MappingProxyType({
    "TITLE": "Pokemon API",
    "VERSION": "1.0.0",
    "DESCRIPTION": "Simple Pokemon API over PokeAPI",
    "SERVERS": [{"url": "http://localhost:8000"}],
    "SERVE_INCLUDE_SCHEMA": False,
    "SWAGGER_UI_DIST": "SIDECAR",
    "SWAGGER_UI_FAVICON_HREF": "SIDECAR",
    "REDOC_DIST": "SIDECAR",
})

# CORS settings
CORS_ALLOW_ALL_ORIGINS: bool = True
CORS_ALLOW_CREDENTIALS: bool = True
